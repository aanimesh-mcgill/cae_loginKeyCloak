{"ast":null,"code":"import axios from 'axios';\n\n// Create axios instance with base configuration\nconst api = axios.create({\n  baseURL: process.env.REACT_APP_API_URL || 'https://localhost:5001/api',\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Function to set the token for requests\nexport function setApiAuthToken(token) {\n  if (token) {\n    api.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n  } else {\n    delete api.defaults.headers.common['Authorization'];\n  }\n}\n\n// Response interceptor to handle authentication errors\napi.interceptors.response.use(response => {\n  console.log('API response:', {\n    url: response.config.url,\n    status: response.status,\n    data: response.data\n  });\n  return response;\n}, error => {\n  if (error.response) {\n    console.error('API error:', {\n      url: error.config.url,\n      status: error.response.status,\n      data: error.response.data,\n      headers: error.config.headers\n    });\n    if (error.response.status === 401) {\n      var _error$response;\n      console.error('API 401 error:', error.config.url, (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data);\n      window.location.href = '/login';\n    }\n  } else {\n    console.error('API error (no response):', error);\n  }\n  return Promise.reject(error);\n});\n\n// Request interceptor to log API requests\napi.interceptors.request.use(config => {\n  console.log('API request:', {\n    url: config.url,\n    method: config.method,\n    headers: config.headers,\n    data: config.data\n  });\n  return config;\n}, error => Promise.reject(error));\n\n// Users API calls\nexport const usersAPI = {\n  getAllUsers: async () => {\n    const response = await api.get('/users');\n    return response.data;\n  },\n  getUserById: async id => {\n    const response = await api.get(`/users/${id}`);\n    return response.data;\n  },\n  updateUser: async (id, userData) => {\n    const response = await api.put(`/users/${id}`, userData);\n    return response.data;\n  },\n  deleteUser: async id => {\n    const response = await api.delete(`/users/${id}`);\n    return response.data;\n  }\n};\n\n// Content API calls\nexport const contentAPI = {\n  getAllContent: async () => {\n    const response = await api.get('/content');\n    return response.data;\n  },\n  getPublishedContent: async () => {\n    const response = await api.get('/content/published');\n    return response.data;\n  },\n  getContentById: async id => {\n    const response = await api.get(`/content/${id}`);\n    return response.data;\n  },\n  createContent: async contentData => {\n    const response = await api.post('/content', contentData);\n    return response.data;\n  },\n  updateContent: async (id, contentData) => {\n    const response = await api.put(`/content/${id}`, contentData);\n    return response.data;\n  },\n  deleteContent: async id => {\n    const response = await api.delete(`/content/${id}`);\n    return response.data;\n  }\n};\n\n// Document API calls\nexport const documentAPI = {\n  getAllDocuments: async () => {\n    const response = await api.get('/documents');\n    return response.data;\n  },\n  getDocumentById: async id => {\n    const response = await api.get(`/documents/${id}`);\n    return response.data;\n  },\n  createDocument: async docData => {\n    const response = await api.post('/documents', docData);\n    return response.data;\n  },\n  updateDocument: async (id, docData) => {\n    const response = await api.put(`/documents/${id}`, docData);\n    return response.data;\n  },\n  deleteDocument: async id => {\n    const response = await api.delete(`/documents/${id}`);\n    return response.data;\n  }\n};\nexport default api;","map":{"version":3,"names":["axios","api","create","baseURL","process","env","REACT_APP_API_URL","headers","setApiAuthToken","token","defaults","common","interceptors","response","use","console","log","url","config","status","data","error","_error$response","window","location","href","Promise","reject","request","method","usersAPI","getAllUsers","get","getUserById","id","updateUser","userData","put","deleteUser","delete","contentAPI","getAllContent","getPublishedContent","getContentById","createContent","contentData","post","updateContent","deleteContent","documentAPI","getAllDocuments","getDocumentById","createDocument","docData","updateDocument","deleteDocument"],"sources":["C:/Users/aanime/cae_login/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\n\n// Create axios instance with base configuration\nconst api = axios.create({\n  baseURL: process.env.REACT_APP_API_URL || 'https://localhost:5001/api',\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// Function to set the token for requests\nexport function setApiAuthToken(token) {\n  if (token) {\n    api.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n  } else {\n    delete api.defaults.headers.common['Authorization'];\n  }\n}\n\n// Response interceptor to handle authentication errors\napi.interceptors.response.use(\n  (response) => {\n    console.log('API response:', {\n      url: response.config.url,\n      status: response.status,\n      data: response.data\n    });\n    return response;\n  },\n  (error) => {\n    if (error.response) {\n      console.error('API error:', {\n        url: error.config.url,\n        status: error.response.status,\n        data: error.response.data,\n        headers: error.config.headers\n      });\n      if (error.response.status === 401) {\n        console.error('API 401 error:', error.config.url, error.response?.data);\n        window.location.href = '/login';\n      }\n    } else {\n      console.error('API error (no response):', error);\n    }\n    return Promise.reject(error);\n  }\n);\n\n// Request interceptor to log API requests\napi.interceptors.request.use(\n  (config) => {\n    console.log('API request:', {\n      url: config.url,\n      method: config.method,\n      headers: config.headers,\n      data: config.data\n    });\n    return config;\n  },\n  (error) => Promise.reject(error)\n);\n\n// Users API calls\nexport const usersAPI = {\n  getAllUsers: async () => {\n    const response = await api.get('/users');\n    return response.data;\n  },\n  \n  getUserById: async (id) => {\n    const response = await api.get(`/users/${id}`);\n    return response.data;\n  },\n  \n  updateUser: async (id, userData) => {\n    const response = await api.put(`/users/${id}`, userData);\n    return response.data;\n  },\n  \n  deleteUser: async (id) => {\n    const response = await api.delete(`/users/${id}`);\n    return response.data;\n  }\n};\n\n// Content API calls\nexport const contentAPI = {\n  getAllContent: async () => {\n    const response = await api.get('/content');\n    return response.data;\n  },\n  \n  getPublishedContent: async () => {\n    const response = await api.get('/content/published');\n    return response.data;\n  },\n  \n  getContentById: async (id) => {\n    const response = await api.get(`/content/${id}`);\n    return response.data;\n  },\n  \n  createContent: async (contentData) => {\n    const response = await api.post('/content', contentData);\n    return response.data;\n  },\n  \n  updateContent: async (id, contentData) => {\n    const response = await api.put(`/content/${id}`, contentData);\n    return response.data;\n  },\n  \n  deleteContent: async (id) => {\n    const response = await api.delete(`/content/${id}`);\n    return response.data;\n  }\n};\n\n// Document API calls\nexport const documentAPI = {\n  getAllDocuments: async () => {\n    const response = await api.get('/documents');\n    return response.data;\n  },\n  getDocumentById: async (id) => {\n    const response = await api.get(`/documents/${id}`);\n    return response.data;\n  },\n  createDocument: async (docData) => {\n    const response = await api.post('/documents', docData);\n    return response.data;\n  },\n  updateDocument: async (id, docData) => {\n    const response = await api.put(`/documents/${id}`, docData);\n    return response.data;\n  },\n  deleteDocument: async (id) => {\n    const response = await api.delete(`/documents/${id}`);\n    return response.data;\n  }\n};\n\nexport default api; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}