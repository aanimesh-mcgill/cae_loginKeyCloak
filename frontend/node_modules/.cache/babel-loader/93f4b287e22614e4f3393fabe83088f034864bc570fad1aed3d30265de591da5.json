{"ast":null,"code":"import axios from 'axios';\n\n// Create axios instance with base configuration\nconst api = axios.create({\n  baseURL: process.env.REACT_APP_API_URL || 'https://localhost:5001/api',\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Function to set the token for requests\nexport function setApiAuthToken(token) {\n  if (token) {\n    api.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n  } else {\n    delete api.defaults.headers.common['Authorization'];\n  }\n}\n\n// Response interceptor to handle authentication errors\napi.interceptors.response.use(response => {\n  return response;\n}, error => {\n  var _error$response;\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n    window.location.href = '/login';\n  }\n  return Promise.reject(error);\n});\n\n// Users API calls\nexport const usersAPI = {\n  getAllUsers: async () => {\n    const response = await api.get('/users');\n    return response.data;\n  },\n  getUserById: async id => {\n    const response = await api.get(`/users/${id}`);\n    return response.data;\n  },\n  updateUser: async (id, userData) => {\n    const response = await api.put(`/users/${id}`, userData);\n    return response.data;\n  },\n  deleteUser: async id => {\n    const response = await api.delete(`/users/${id}`);\n    return response.data;\n  }\n};\n\n// Content API calls\nexport const contentAPI = {\n  getAllContent: async () => {\n    const response = await api.get('/content');\n    return response.data;\n  },\n  getPublishedContent: async () => {\n    const response = await api.get('/content/published');\n    return response.data;\n  },\n  getContentById: async id => {\n    const response = await api.get(`/content/${id}`);\n    return response.data;\n  },\n  createContent: async contentData => {\n    const response = await api.post('/content', contentData);\n    return response.data;\n  },\n  updateContent: async (id, contentData) => {\n    const response = await api.put(`/content/${id}`, contentData);\n    return response.data;\n  },\n  deleteContent: async id => {\n    const response = await api.delete(`/content/${id}`);\n    return response.data;\n  }\n};\n\n// Document API calls\nexport const documentAPI = {\n  getAllDocuments: async () => {\n    const response = await api.get('/documents');\n    return response.data;\n  },\n  getDocumentById: async id => {\n    const response = await api.get(`/documents/${id}`);\n    return response.data;\n  },\n  createDocument: async docData => {\n    const response = await api.post('/documents', docData);\n    return response.data;\n  },\n  updateDocument: async (id, docData) => {\n    const response = await api.put(`/documents/${id}`, docData);\n    return response.data;\n  },\n  deleteDocument: async id => {\n    const response = await api.delete(`/documents/${id}`);\n    return response.data;\n  }\n};\nexport default api;","map":{"version":3,"names":["axios","api","create","baseURL","process","env","REACT_APP_API_URL","headers","setApiAuthToken","token","defaults","common","interceptors","response","use","error","_error$response","status","window","location","href","Promise","reject","usersAPI","getAllUsers","get","data","getUserById","id","updateUser","userData","put","deleteUser","delete","contentAPI","getAllContent","getPublishedContent","getContentById","createContent","contentData","post","updateContent","deleteContent","documentAPI","getAllDocuments","getDocumentById","createDocument","docData","updateDocument","deleteDocument"],"sources":["C:/Users/aanime/cae_login/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\n\n// Create axios instance with base configuration\nconst api = axios.create({\n  baseURL: process.env.REACT_APP_API_URL || 'https://localhost:5001/api',\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// Function to set the token for requests\nexport function setApiAuthToken(token) {\n  if (token) {\n    api.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n  } else {\n    delete api.defaults.headers.common['Authorization'];\n  }\n}\n\n// Response interceptor to handle authentication errors\napi.interceptors.response.use(\n  (response) => {\n    return response;\n  },\n  (error) => {\n    if (error.response?.status === 401) {\n      window.location.href = '/login';\n    }\n    return Promise.reject(error);\n  }\n);\n\n// Users API calls\nexport const usersAPI = {\n  getAllUsers: async () => {\n    const response = await api.get('/users');\n    return response.data;\n  },\n  \n  getUserById: async (id) => {\n    const response = await api.get(`/users/${id}`);\n    return response.data;\n  },\n  \n  updateUser: async (id, userData) => {\n    const response = await api.put(`/users/${id}`, userData);\n    return response.data;\n  },\n  \n  deleteUser: async (id) => {\n    const response = await api.delete(`/users/${id}`);\n    return response.data;\n  }\n};\n\n// Content API calls\nexport const contentAPI = {\n  getAllContent: async () => {\n    const response = await api.get('/content');\n    return response.data;\n  },\n  \n  getPublishedContent: async () => {\n    const response = await api.get('/content/published');\n    return response.data;\n  },\n  \n  getContentById: async (id) => {\n    const response = await api.get(`/content/${id}`);\n    return response.data;\n  },\n  \n  createContent: async (contentData) => {\n    const response = await api.post('/content', contentData);\n    return response.data;\n  },\n  \n  updateContent: async (id, contentData) => {\n    const response = await api.put(`/content/${id}`, contentData);\n    return response.data;\n  },\n  \n  deleteContent: async (id) => {\n    const response = await api.delete(`/content/${id}`);\n    return response.data;\n  }\n};\n\n// Document API calls\nexport const documentAPI = {\n  getAllDocuments: async () => {\n    const response = await api.get('/documents');\n    return response.data;\n  },\n  getDocumentById: async (id) => {\n    const response = await api.get(`/documents/${id}`);\n    return response.data;\n  },\n  createDocument: async (docData) => {\n    const response = await api.post('/documents', docData);\n    return response.data;\n  },\n  updateDocument: async (id, docData) => {\n    const response = await api.put(`/documents/${id}`, docData);\n    return response.data;\n  },\n  deleteDocument: async (id) => {\n    const response = await api.delete(`/documents/${id}`);\n    return response.data;\n  }\n};\n\nexport default api; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}